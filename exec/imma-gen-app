#!/usr/bin/env bash

function app_services {
  hcltool "$shome/common/app.tf"
  
  for s in "$@"; 
    do jq -n -r --argfile service <(hcltool "$shome/common/service.tf") '$service' | sed "s#SERVICE#${s}#g"
  done
}

function main {
  local shome="$(cd -P -- "${BASH_SOURCE%/*}/.." && pwd -P)"
  source "$shome/script/profile"
  source normalize

  local nm_env="$1"; shift
  local nm_app="$1"; shift

  local tmp_fogg="$(mktemp -t XXXXXX)"
  app_services "$@" | jq -s 'reduce .[] as $e ({}; . * $e)' > "$tmp_fogg"

	cat "$tmp_fogg" \
    | jq -r '.module | map(.source) | unique[]' \
    | (runmany 'cat $1/export.json'; runmany 'hcltool ../../common/$1.tf' global) \
    | jq -s 'reduce .[] as $exp ({}; . * $exp)' > "$tmp_fogg.modules"

	jq -n --argfile seed     "$tmp_fogg" \
		    --argfile modules  "$tmp_fogg.modules" \
        --arg     az_count "$(cat ../../env/$nm_env/.terraform/terraform.tfstate | jq -r '.modules[0].outputs.az_count.value')" \
	      --arg     env_name "$nm_env" --arg app_name "$nm_app" '
          $seed * $modules |
            .variable.az_count            |= { default: "\($az_count)" } |
            .variable.global_remote_state |= { default: "../../env/global/.terraform/terraform.tfstate" } |
            .variable.env_remote_state    |= { default: "../../env/\($env_name)/.terraform/terraform.tfstate" } |
            .variable.app_name            |= { default: "\($app_name)" }'
}

source sub "$BASH_SOURCE" "$@"
